
JMP MAIN            #GOTO MAIN FUNCTION. SKIP NEXT ADDRESS
#===================================================================
#HARDWARE INPUT INTERRUPT 
JMP INPUT_FOUND     #JUMP TO INPUT_FOUND WHEN ACCEPT_INPUT IS CALLED
#===================================================================

MAIN: # MAIN FUNCTION WITH NO ARGUMENT

    LOOP:
        XOR R0, R0  #RESET R0
        ACCEPT_INPUT #ALLOW DATA ON INPUT PORT TO BE SAVED ON INPUT REGISTER.
                     #THIS WILL BE ALLOWED WHEN IN_INPUT_AVAIL PIN IS 1.
                     #JUMP TO ADDRESS WHERE HARDWARE INPUT INTERRUPT LOCATION IS SAVED.

    INPUT_FOUND:
        ADD R0, INR     #COPY DATA ON INPUT REGISTER (INR) TO R0 REGISTER

        XOR R1, R1      #RESET R1
        OR R1, R0       #OR OP BETWEEN R0 and R1. IT WILL COPY VALUE OF R0 TO R1.
        AND R1, 12      #AND OP BETWEEN R1 and 1100(12). IT WILL GET 2ND HALF OF 4 BITS (2 BITS) OF R1.
        SHR R1, 2       #SHIFT RIGHT R1 BY 2 BITS. IT WILL HELP GET REAL VALUE OF 2ND HALF OF 4 BITS (2 BITS).

        XOR R2, R2      #RESET R2
        OR R2, R0       #OR OP BETWEEN R0 and R2. IT WILL COPY VALUE OF R0 TO R2.
        AND R2, 3       #AND OP BETWEEN R2 and 0011(3). IT WILL GET 1ST HALF OF 4 BITS (2 BITS) OF R2.

        XOR R1, R2      #PERFORM XOR OPERATION BETWEEN 1ST HALF (R2) AND 2ND HALF (R1) OF 4 BITS.

        XOR OUTR, OUTR  #RESET OUTPUT REGISTER (OUTR)
        ADD OUTR, R1    #COPY DATA ON R1 REGISTER TO OUTPUT REGISTER (OUTR)
        PRINT_CLEAR     #CLEAR DISPLAY SCREEN
        PRINT_OUTPUT    #PRINT OUTPUT IN DISPLAY

        JMP LOOP