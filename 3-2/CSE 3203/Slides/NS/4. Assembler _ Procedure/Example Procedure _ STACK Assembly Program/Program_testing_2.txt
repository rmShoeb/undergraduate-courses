START 16    # PROGRAM WILL BE LOADED AT ADDRESS 16 IN RAM
            # IT WILL FILL ALL PREVIOUS ADDRESSES (0-15) WITH 0 AND 
            # PHYSICAL ADDRESS = LOGICAL ADDRESS + RELOCATION VALUE (16)

XOR R0, R0 # RESET R0 WHICH WILL BE USED INITIALIZE NUM, SUM AND COUNT

# ALL THE LOCAL VARIABLES WILL BE SAVED FROM ADDRESS 6
STORE [6], R0    # Reset NUM ([6])
STORE [7], R0    # Reset SUM ([7])
STORE [8], R0   # Reset COUNT ([8])

LOAD R2, [8]    # R2 = COUNT ([8]) = 0 USING R2 AS ITS REPLACEMENT 
ADD R2, 5        # COUNT (R2) = 5
STORE [8], R2   # COUNT ([8]) = 5 

LOAD R0, [6]    # R0 = NUM ([6]) = 0 USING R0 AS ITS REPLACEMENT 
ADD R0, 1       # NUM (R0) = 1 
STORE [6], R0   # NUM ([6]) = 1 

LOAD R1, [7]    # R1 = SUM ([7]) = 0 USING R1 AS ITS REPLACEMENT 

STARTING:
    CMP R0, R2  # NUM (R0) > COUNT (R2)
    JG FINISH   # WHILE (NUM (R0) > COUNT (R2)), IF TRUE GOTO FINISH
    ADD R1, R0  # SUM (R1) = SUM (R1) + NUM (R0)
    ADD R0, 1   # NUM (R0) = NUM (R0) + 1
    JMP STARTING   # GOTO START OF WHILE LOOP
FINISH:

STORE [6], R0   # NUM ([6]) = 6 
STORE [7], R1   # SUM ([7]) = 15

Exit:          # PUT CPU INTO NOP (NO OPERATION)
    JMP Exit       # PUT CPU INTO NOP (NO OPERATION)
